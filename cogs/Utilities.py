from discord.ext import commands
from random import choice, randint
from sys import path

path.insert(0, '../')
from variables import responses, joke, where


class Utilities(commands.Cog):
     '''–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥-—É—Ç–∏–ª–∏—Ç, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–º–æ—á—å –≤–∞–º –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö'''
     def __init__(self, client):
         self.client = client

     @commands.command(aliases=['8ball', 'ball', '8b'])
     async def —à–∞—Ä(self, ctx, *, question):
          '''|–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å, –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –î–∞ –∏–ª–∏ –ù–µ—Ç. –ù—è—à–∞ –¥–∞—Å—Ç –≤–∞–º –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç!'''
          await ctx.send(f'{choice(responses)}')
     
     @commands.command()
     async def —à–∏–ø(self, ctx):
          '''–†–∞–Ω–¥–æ–º–Ω—ã–π —à–∏–ø'''
          player1 = choice(list(filter(lambda x: x.bot != True,ctx.guild.members)))
          player2 = choice(list(filter(lambda x: x != player1 and x.bot != True, ctx.guild.members)))

          await ctx.send(f"–†–∞–Ω–¥–æ–º–Ω—ã–π —à–∏–ø:\nüíï{player1.name}üíï{player2.name}üíï\n–õ—é–±–∏—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥–∞!")

     @commands.command(alieses=['coin',"–∫–æ–∏–Ω","–º–æ–Ω–µ—Ç–∞"])
     async def –º–æ–Ω–µ—Ç–∫–∞(self, ctx):
          '''|–ß—Ç–æ –≤—ã–ø–∞–¥–µ—Ç, –æ—Ä—ë–ª, –∏–ª–∏ —Ä–µ—à–∫–∞? –ù—è—à–∞ –¥–∞—Å—Ç –æ—Ç–≤–µ—Ç!'''
          chance = randint(0,101)
          if chance < 50:
               await ctx.send("–û—Ä—ë–ª!")
          elif chance < 99:
               await ctx.send("–†–µ—à–∫–∞!")
          else:
               await ctx.send("–†–µ–±—Ä–æ!")
     
     @commands.command(alieses=['ping'], help='–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–∏–Ω–≥ –Ω—è—à–∫–∏\n?ping', )
     async def –ø–∏–Ω–≥(self, ctx):
          '''|–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–∏–Ω–≥ –Ω—è—à–∫–∏'''
          await ctx.send(f"–ü–∏–Ω–≥!{round(self.client.latency * 1000)}ms")
     
     @commands.command(alieses=['random','rand', '—Ä–∞–Ω–¥–æ–º', "—Ä–∞–Ω–¥"], help='–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ –æ—Ç –∏ –¥–æ, –∏ –Ω—è—à–∞ –¥–∞—Å—Ç –≤–∞–º —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ —ç—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞!\n–ü—Ä–∏–º–µ—Ä—ã:\n?rand 100 200\n?random 200')
     async def —Ä–∞–Ω–¥(self, ctx, min, max=0):
          '''|–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ –æ—Ç –∏ –¥–æ, –∏ –Ω—è—à–∞ –¥–∞—Å—Ç –≤–∞–º —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ —ç—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞!'''
          if max:
               await ctx.send(f"{randint(int(min), int(max))}")
          else:
               await ctx.send(f"{randint(int(0), int(min))}")
     
     @commands.command(aliases=['chance'], help='–ù—è—à–∞ —Å–∫–∞–∂–µ—Ç —à–∞–Ω—Å –Ω–∞ —Å–æ–±—ã—Ç–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –Ω–∞–ø–∏—à–∏—Ç–µ\n–ù–∞–ø—Ä–∏–º–µ—Ä\n?—à–∞–Ω—Å –° –∫–∞–∫–∏–º —à–∞–Ω—Å–æ–º —Ñ–∞–Ω –ø–æ–π–¥—ë—Ç –¥–µ–ª–∞—Ç—å –±–æ—Ç–∞?\n', brief='–ù—è—à–∞ —Å–∫–∞–∂–µ—Ç —à–∞–Ω—Å –Ω–∞ —Å–æ–±—ã—Ç–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –Ω–∞–ø–∏—à–∏—Ç–µ')
     async def —à–∞–Ω—Å(self, ctx, *, text):
          "|–ù—è—à–∞ —Å–∫–∞–∂–µ—Ç —à–∞–Ω—Å –Ω–∞ —Å–æ–±—ã—Ç–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –Ω–∞–ø–∏—à–∏—Ç–µ"
          num = randint(0,100)
          float = randint(0,9999)
          if num == 100:
               await ctx.send(f"%–°–¢–û%–ü–†–û–¶–ï–ù–¢–û–í%")
          elif num == 0 and float == 0:
               await ctx.send("–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!–í—ã –≤—ã–±–∏–ª–∏ –ü–û–õ–ù–´–ô –ù–û–õ–¨! 0,0000%!")
          else:
               await ctx.send(f"–Ø –¥—É–º–∞—é, —à–∞–Ω—Å {num}.{float}%")  
     
     @commands.command()
     async def —à—É—Ç–∫–∞(self, ctx):
          member1 = choice(list(filter(lambda x: x.bot != True,ctx.guild.members)))
          member2 = choice(list(filter(lambda x: x != member1 and x.bot != True, ctx.guild.members)))

          converter = commands.TextChannelConverter()
          channel = await converter.convert(ctx, str(885403370570014740))
          
          messages = []
          async for message in channel.history():
               messages.append(message)
          
          message = choice(messages)

          await ctx.send(f"{choice(where)} {member1.name} –∏ {member2.name}. {member1.name} —Ä–∞—Å–∫–∞–∑—ã–≤–∞–µ—Ç —à—É—Ç–∫—É: \n\n{message.content}\n\n{member2.name} –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –æ—Ç–≤–µ—á–∞–µ—Ç: \n-{choice(joke)}")

def setup(client):
     client.add_cog(Utilities(client))
